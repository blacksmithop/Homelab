services:
  # Cloudflare Tunnel
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    command: tunnel --no-autoupdate run --token ${CLOUDFLARE_TOKEN}
    restart: unless-stopped
    environment:
      - CLOUDFLARE_TOKEN=${CLOUDFLARE_TOKEN}
    networks:
      - cf
  
  # Nginx Proxy Manager (NPM)
  npm:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginx-proxy-manager
    restart: unless-stopped
    networks:
      - cf
      - services
    volumes:
      - ./data/npm:/data
      - ./data/letsencrypt:/etc/letsencrypt
    environment:
      DB_SQLITE_FILE: "/data/database.sqlite"

  # Homepage
  homepage:
    image: blacksmithop/homepage
    container_name: homepage
    restart: unless-stopped
    networks:
      - services

  mc:
    image: itzg/minecraft-server
    container_name: minecraft
    tty: true
    networks:
      - services
    stdin_open: true
    ports:
      - "25565:25565"
    environment:
      EULA: "TRUE"
    volumes:
      # attach the relative directory 'data' to the container's /data path
      - ./data/minecraft:/data

  pastebin:
    image: "ghcr.io/jordan-dalby/bytestash:latest"
    container_name: pastebin
    restart: always
    volumes:
      - ./data/snippets:/data/snippets
    environment:
      # See https://github.com/jordan-dalby/ByteStash/wiki/FAQ#environment-variables
      BASE_PATH: ""
      JWT_SECRET: ${BYTESTASH_JWT_SECRET}
      TOKEN_EXPIRY: 24h
      ALLOW_NEW_ACCOUNTS: "true"
      DEBUG: "true"
      DISABLE_ACCOUNTS: "false"
      DISABLE_INTERNAL_ACCOUNTS: "false"

      # See https://github.com/jordan-dalby/ByteStash/wiki/Single-Sign%E2%80%90on-Setup for more info
      OIDC_ENABLED: "false"
      OIDC_DISPLAY_NAME: ""
      OIDC_ISSUER_URL: ""
      OIDC_CLIENT_ID: ""
      OIDC_CLIENT_SECRET: ""
      OIDC_SCOPES: ""
    networks:
      - services

  # Plex
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - VERSION=docker
    volumes:
      - plex-library:/config
      - ./data/media/series:/tv
      - ./data/media/movies:/movies
    restart: unless-stopped
    networks:
      - services

  # Ollama
  ollama:
    image: ollama/ollama:latest
    # ports:
    #   - 11434:11434
    volumes:
      - ./data/ollama:/root/.ollama
    container_name: ollama
    tty: true
    restart: unless-stopped
    environment:
      - OLLAMA_KEEP_ALIVE=24h
      - OLLAMA_HOST=${OLLAMA_HOST}
    networks:
      - services

volumes:
  plex-library:

networks:
  cf:
    name: cf
  services:
    name: services