services:
  # Cloudflare Tunnel
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    command: tunnel --no-autoupdate run --token ${CLOUDFLARE_TOKEN}
    restart: unless-stopped
    environment:
      - CLOUDFLARE_TOKEN=${CLOUDFLARE_TOKEN}
    networks:
      - cf
  # Nginx Proxy Manager (NPM)
  npm:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginx-proxy-manager
    restart: unless-stopped
    networks:
      - cf
      - services
    volumes:
      - ./data/npm:/data
      - ./data/letsencrypt:/etc/letsencrypt
    environment:
      DB_SQLITE_FILE: "/data/database.sqlite"


  # Homepage
  homepage:
    image: blacksmithop/homepage
    container_name: homepage
    restart: unless-stopped
    networks:
      - services

  # Portainer
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    # ports:
    #   - 9443:9443
    volumes:
      - portainer-data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    networks:
      - services

  # ShellHub Agent
  shellhub:
    image: shellhubio/agent:v0.18.2
    container_name: shellhub
    restart: on-failure
    privileged: true
    network_mode: host
    pid: host
    volumes:
      - /:/host
      - /dev:/dev
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/passwd:/etc/passwd
      - /etc/group:/etc/group
      - /etc/resolv.conf:/etc/resolv.conf
      - /var/run:/var/run
      - /var/log:/var/log
      - /tmp:/tmp
    environment:
      - SHELLHUB_SERVER_ADDRESS=${SHELLHUB_SERVER_ADDRESS}
      - SHELLHUB_TENANT_ID=${SHELLHUB_TENANT_ID}
      - SHELLHUB_PRIVATE_KEY=${SHELLHUB_PRIVATE_KEY:-/host/etc/shellhub.key}

  # Plex
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - VERSION=docker
    volumes:
      - plex-library:/config
      - ./data/media/series:/tv
      - ./data/media/movies:/movies
    restart: unless-stopped
    networks:
      - services

  # Ollama
  ollama:
    image: ollama/ollama:latest
    # ports:
    #   - 11434:11434
    volumes:
      - ./data/ollama:/root/.ollama
    container_name: ollama
    tty: true
    restart: unless-stopped
    environment:
      - OLLAMA_KEEP_ALIVE=24h
      - OLLAMA_HOST=${OLLAMA_HOST}
    networks:
      - services

volumes:
  portainer-data:
  plex-library:

networks:
  cf:
    name: cf
  services:
    name: services